{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","setSelectedId","className","map","div","key","onClick","url","whileHover","opacity","layout","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","selectedId","deleteHandler","a","window","confirm","delete","refFromURL","console","log","e","target","classList","contains","y","label","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d26be22.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\"; //firebase 데이터 베이스 사용 준비\r\nimport \"firebase/storage\";\r\n\r\n // Your web app's Firebase configuration\r\n  const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const projectStorage = firebase.storage();\r\n  export const projectFirestore = firebase.firestore();\r\n  export const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  // export { projectStorage, projectFirestore };","import { useState, useEffect } from \"react\";\r\n\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n  useEffect(() => {\r\n    const unsub = projectFirestore //unsub: unsubscribe \r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      }); // this returns unsubscribe from the collection function!!!\r\n\r\n\r\n      return () => unsub(); //cleanup function : 사진을 불러오고 ImageGrid comp에서 쓰이면 더이상 필요없어지기 때문에 클린업 함수를 만든다.\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({ setSelectedImg, setSelectedId }) => {\r\n  const { docs } = useFirestore(\"images\");\r\n  //   console.log(docs);\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            onClick={() => {\r\n              setSelectedImg(doc.url);\r\n              setSelectedId(doc.id);\r\n            }}\r\n            whileHover={{ opacity: 1 }}\r\n            layout\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt=\"uploaded pic\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }} //delay: 1 1초\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { projectFirestore, projectStorage } from \"../firebase/config\";\r\nconst Modal = ({ selectedImg, setSelectedImg, selectedId }) => {\r\n  const clickHandler = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImg(null); //이미지 외의 영역을 눌렀을 시에만\r\n    }\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    const ok = window.confirm(\"You delete this picture?\");\r\n    if (ok) {\r\n      await projectFirestore.doc(`images/${selectedId}`).delete();\r\n      await projectStorage.refFromURL(selectedImg).delete();\r\n      console.log(\"삭제 성공\");\r\n      setSelectedImg(null);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={clickHandler}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        src={selectedImg}\r\n        alt=\"enlarged pic\"\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n      <motion.label\r\n        className=\"delete\"\r\n        onClick={deleteHandler}\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      >\r\n        <span>\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </span>\r\n      </motion.label>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <motion.div className=\"title\" initial={{opacity: 0}} animate={{opacity: 1}}>\r\n      <h1>Firegram</h1>\r\n      <h2>Lovely Pictures</h2>\r\n      <p>Il ne reste que des photos.</p>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default Title;","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection('images');\r\n\r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      const createdAt = timestamp();\r\n      collectionRef.add({ url, createdAt })\r\n      setUrl(url);\r\n    });\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage; ","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = useStorage(file);\r\n  console.log(progress, url);\r\n\r\n  useEffect(() => {\r\n    if (url) { //undefined or null (upload 과정중에는)\r\n      setFile(null); //100% upload 이후 file.name과 progress bar 없애주기 위한 설정.\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <motion.div \r\n        className=\"progress-bar\" \r\n        initial={{ width: 0 }}\r\n        animate={{ width: progress + '%' }}\r\n    >\r\n    </motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar; ","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const changeHandler = (e) => {\r\n    let selected = e.target.files[0];\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an image file (png or jpeg)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <span><i className=\"fas fa-image\"></i></span>\r\n      </label>\r\n\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import React, { useState } from 'react';\r\nimport ImageGrid from './comps/ImageGrid';\r\nimport Modal from './comps/Modal';\r\nimport Title from './comps/Title';\r\nimport UploadForm from './comps/UploadForm';\r\n\r\nfunction App() {\r\n\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title/>\r\n      <UploadForm />\r\n      <ImageGrid setSelectedImg={setSelectedImg} setSelectedId={setSelectedId} />\r\n      {selectedImg && <Modal setSelectedImg={setSelectedImg} selectedImg={selectedImg} selectedId={selectedId} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}